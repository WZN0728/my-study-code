<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans        http://www.springframework.org/schema/beans/spring-beans.xsd        http://code.alibabatech.com/schema/dubbo        http://code.alibabatech.com/schema/dubbo/dubbo.xsd">

    <!-- 当前项目在分布式系统里面的唯一名称，计算依赖关系的标签
    <dubbo:application name="order-provider" owner="wuting"></dubbo:application> -->
    <!-- dubbo对外暴露服务的地址所对应的注册中心，这里面用大zookeeper来管理注册中心
    <dubbo:registry address="N/A"></dubbo:registry> -->
    <!-- 生成一个远程服务代理（类似与xfire与cxf的远程的调用桩）
    <dubbo:reference id="orderServices" interface="org.api.IOrderService" url="dubbo://192.168.10.1:20880/org.api.IOrderService"></dubbo:reference> -->

    <!-- 上面的属于点对点的注册方式，方便调试 -->
    <!-- 当前项目在分布式系统里面的唯一名称，计算依赖关系的标签 -->
    <dubbo:application name="order-provider" owner="wuting"></dubbo:application>
    <!-- dubbo对外暴露服务的地址所对应的注册中心，这里面用大zookeeper来管理注册中心 -->
    <dubbo:registry protocol="zookeeper"
                    address="192.168.10.128:2181,192.168.10.129:2181,192.168.10.130:2181,192.168.10.131:2181"></dubbo:registry>
    <!-- 生成一个远程服务代理（类似与xfire与cxf的远程的调用桩） -->
    <!-- 在有多版本支持时，要在客户端调用时制定好要调用的版本号,这里的版本号要与需要调用的服务端定义的版本一致 -->
    <dubbo:reference id="orderServices" interface="org.api.IOrderService" check="false" protocol="hessian"
                     version="2.0"></dubbo:reference>
    <!-- async="true"异步调用，异步调用只针对dubbo协议 -->
    <dubbo:reference id="orderQueryServices" interface="org.api.IOrderQueryService" async="true" check="false"
                     version="1.0"></dubbo:reference>
</beans>